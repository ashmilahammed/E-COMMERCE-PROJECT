<%- include("../../views/partials/admin/header") %>


        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <style>

        .error-message {
            color: red;
        }

        .thumbnails-container {
            display: flex;
            overflow-x: auto;
            gap: 10px;
        }

        .thumbnail {
            margin-right: 10px;
        }

        .form-label {
            font-weight: bold;
        }

        .card {
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        .content-main {
            padding: 20px;
        }

        .btn {
            margin-top: 15px;
            background-color: #ffffff;
        }

        .image-preview {
            max-width: 100%;
            max-height: 200px;
            object-fit: contain;
            border: 1px solid #ddd;
            padding: 5px;
            border-radius: 8px;
        }

        .image-upload-section {
            border: 1px solid #ccc;
            padding: 20px;
            border-radius: 10px;
            background-color: #f9f9f9;
        }

        .cropped-preview {
            max-width: 100%;
            max-height: 150px;
            border: 1px dashed #007bff;
            padding: 5px;
            border-radius: 8px;
        }
        
        .btn-danger {
            background-color: #ff4444;
            color: white;
            border: none;
            
        }

        .btn-danger:hover {
            background-color: #e10000;
        }
      
    </style>

    <section class="content-main">
        <div class="row">
            <div class="col-12">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <div class="col-lg-8 mx-auto">
                <div class="card mb-4">
                    <div class="card-body">

                        <form method="post" action="/admin/addProducts" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <% for(let i=0;i<brand.length;i++) { %>

                                        <option value="<%= brand[i].brandName %>">

                                            <%= brand[i].brandName %>

                                        </option>

                                        <% } %>

                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full Description</label>
                                <textarea placeholder="Type here" id="descriptionid" name="description"
                                    class="form-control border" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>

       

                            <div class="mb-4">
                                <label class="form-label">Category</label>
                                <select class="form-select border" name="category">
                                    <% for(let i=0;i<category.length;i++) { %>

                                        <option value="<%= category[i].name %>">

                                            <%= category[i].name %>

                                        </option>

                                        <% } %>
                                </select>
                                <div id="category-error" class="error-message"></div>
                            </div>

                            <div id="variant-container" class="card mb-4">
                                <div class="card-header">
                                    <h4>Product Variants</h4>
                                </div>
                                <div class="card-body">
                                    <div class="variant mb-4">
                                        <label for="size" class="form-label">Size:</label>
                                        <input type="number" name="variants[0][size]" class="form-control border"
                                            required>
                                        <div id="size-error" class="error-message"></div>

                                        <label for="regularPrice" class="form-label">Regular Price:</label>
                                        <input type="number" name="variants[0][regularPrice]"
                                            class="form-control border" required>
                                        <div id="regularPrice-error" class="error-message"></div>

                                        <label for="salePrice" class="form-label">Sale Price:</label>
                                        <input type="number" name="variants[0][salePrice]" class="form-control border"
                                            required>
                                        <div id="salePrice-error" class="error-message"></div>

                                        <label for="quantity" class="form-label">Quantity:</label>
                                        <input type="number" name="variants[0][quantity]" class="form-control border"
                                            value="1" required>
                                        <div id="quantity-error" class="error-message"></div>

                                        <!-- <label for="status" class="form-label">Status:</label>
                                        <select name="variants[0][status]" class="form-select border" required>
                                            <option value="Available">Available</option>
                                            <option value="out of stock">Out of Stock</option>
                                            <option value="Discontinued">Discontinued</option>
                                        </select> -->
                                        <br>
                                        <button type="button"  class="btn btn-danger mt-2"
                                            onclick="removeVariant(this)">Remove Variant</button>
                                    </div>
                                </div>
                                <div class="card-footer">
                                    <button type="button" class="btn btn-primary" onclick="addVariant()">Add Another
                                        Variant</button>
                                </div>
                            </div>

                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Choose Images</h4>
                                </div>
                                <div class="card-body">
                                    <!-- Image 1 -->
                                    <div class="image-upload-section mb-4">
                                        <label for="input1" class="form-label">Upload Image 1:</label>
                                        <div class="d-flex flex-column align-items-center">
                                            <img src="" alt="Image Preview 1" id="imgView1" class="image-preview mb-3">
                                            <input class="form-control mb-2" type="file" name="images" id="input1"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="viewImage1(event), viewImage(event, 1)">
                                            <div class="image-cropper d-flex align-items-center" style="display:none;">
                                                <img src="" id="croppedImg1" alt="" class="cropped-preview">
                                                <button type="button" id="saveButton1"
                                                    class="btn btn-sm btn-primary mt-2">Save</button>
                                            </div>
                                            <div id="images-error" class="error-message"></div>
                                        </div>
                                    </div>

                                    <!-- Image 2 -->
                                    <div class="image-upload-section mb-4">
                                        <label for="input2" class="form-label">Upload Image 2:</label>
                                        <div class="d-flex flex-column align-items-center">
                                            <img src="" alt="Image Preview 2" id="imgView2" class="image-preview mb-3">
                                            <input class="form-control mb-2" type="file" name="images" id="input2"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="viewImage2(event), viewImage(event, 2)">
                                            <div class="image-cropper d-flex align-items-center" style="display:none;">
                                                <img src="" id="croppedImg2" alt="" class="cropped-preview">
                                                <button type="button" id="saveButton2"
                                                    class="btn btn-sm btn-primary mt-2">Save</button>
                                            </div>
                                            <div id="images-error" class="error-message"></div>
                                        </div>
                                    </div>

                                    <!-- Image 3 -->
                                    <div class="image-upload-section mb-4">
                                        <label for="input3" class="form-label">Upload Image 3:</label>
                                        <div class="d-flex flex-column align-items-center">
                                            <img src="" alt="Image Preview 3" id="imgView3" class="image-preview mb-3">
                                            <input class="form-control mb-2" type="file" name="images" id="input3"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="viewImage3(event), viewImage(event, 3)">
                                            <div class="image-cropper d-flex align-items-center" style="display:none;">
                                                <img src="" id="croppedImg3" alt="" class="cropped-preview">
                                                <button type="button" id="saveButton3"
                                                    class="btn btn-sm btn-primary mt-2">Save</button>
                                            </div>
                                            <div id="images-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>



                            <div class="text-center">
                                <button class="btn btn-primary btn-md rounded font-sm hover-up"
                                    style="background-color: rgb(0, 187, 0);" type="button"
                                    onclick="validateAndSubmit()">
                                    Publish
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>


    <script>
 


        function validateAndSubmit() {
            if (validateForm()) {
                // Show loading state
                Swal.fire({
                    title: 'Publishing...',
                    text: 'Please wait while we process your submission',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                // Submit the form
                document.querySelector('form').submit();
            }
        }




        function viewImage1(event) {
            document.getElementById("imgView1").src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage2(event) {
            document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage3(event) {
            document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0]);
        }



        //crop  
        async function viewImage(event, index) {
            const input = event.target;
            const reader = new FileReader();

            reader.onload = function () {
                const dataURL = reader.result;
                const image = document.getElementById("imgView" + index);
                image.src = dataURL;

                // Initialize Cropper
                const cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 1,
                    guides: true,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true,
                });

                const cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
                cropperContainer.style.display = "block";

                // Save Cropped Image
                const saveButton = document.querySelector("#saveButton" + index);
                saveButton.addEventListener("click", async function () {
                    const croppedCanvas = cropper.getCroppedCanvas();

                    if (croppedCanvas) {
                        const timestamp = new Date().getTime();
                        const fileName = `cropped-img-${timestamp}-${index}.jpeg`;

                        croppedCanvas.toBlob(
                            (blob) => {
                                const file = new File([blob], fileName, { type: "image/jpeg" });
                                const dataTransfer = new DataTransfer();
                                dataTransfer.items.add(file);

                                const inputField = document.getElementById("input" + index);
                                inputField.files = dataTransfer.files;

                                // Update cropped image display
                                const croppedImage = document.getElementById("croppedImg" + index);
                                croppedImage.src = URL.createObjectURL(file);

                                // Cleanup
                                cropper.destroy();
                                cropperContainer.style.display = "none";
                            },
                            "image/jpeg",
                            1.0   // Quality
                        );
                    }
                });
            };

            reader.readAsDataURL(input.files[0]);
        }




        //thumbnail
        const selectedImages = [];
        document.getElementById("input1").addEventListener("change", handleFileSelect);

        function handleFileSelect(event) {
            const addedImagesContainer = document.getElementById("addedImagesContainer");
            addedImagesContainer.innerHTML = "";
            const files = event.target.files;
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const thumbnail = document.createElement("div");
                thumbnail.classList.add("thumbnail");


                const img = document.createElement("img");
                img.src = URL.createObjectURL(file);
                img.alt = "thumbnail";
                img.style.width = "50px";
                img.style.height = "auto";
                const removeIcon = document.createElement("span");
                removeIcon.classList.add("remove-icon");
                removeIcon.innerHTML = "&times;";
                removeIcon.addEventListener("click", function () {
                    const index = selectedImages.indexOf(file);
                    if (index !== -1) {
                        selectedImages.splice(index, 1);
                    }
                    thumbnail.remove();
                });

                thumbnail.appendChild(img);
                thumbnail.appendChild(removeIcon);
                addedImagesContainer.appendChild(thumbnail);

            }
        }



        function validateForm() {
            let isValid = true;

            // Helper function to safely get input value
            function getInputValue(id) {
                const element = document.getElementById(id);
                return element ? element.value.trim() : '';
            }

            // Helper function to show error
            function showError(id, message) {
                const errorElement = document.getElementById(id + '-error');
                if (errorElement) {
                    errorElement.textContent = message;
                }
                isValid = false;
            }

            // Validate product name
            const productName = getInputValue('product_name');
            if (!productName) {
                showError('productName', 'Product name is required');
            }

            // Validate description
            const description = getInputValue('descriptionid');
            if (!description) {
                showError('description', 'Description is required');
            }

            // Validate variants
            const variantContainer = document.getElementById('variant-container');
            if (variantContainer) {
                const variants = variantContainer.getElementsByClassName('variant');
                if (variants.length === 0) {
                    showError('variant', 'At least one variant is required');
                }

                for (let i = 0; i < variants.length; i++) {
                    const variant = variants[i];
                    const size = variant.querySelector('input[name^="variants"][name$="[size]"]');
                    const regularPrice = variant.querySelector('input[name^="variants"][name$="[regularPrice]"]');
                    const salePrice = variant.querySelector('input[name^="variants"][name$="[salePrice]"]');
                    const quantity = variant.querySelector('input[name^="variants"][name$="[quantity]"]');

                    if (size && !size.value.trim()) {
                        showError('size', `Size is required for variant ${i + 1}`);
                    }
                    if (regularPrice && !regularPrice.value.trim()) {
                        showError('regularPrice', `Regular price is required for variant ${i + 1}`);
                    }
                    if (salePrice && !salePrice.value.trim()) {
                        showError('salePrice', `Sale price is required for variant ${i + 1}`);
                    }
                    if (quantity && !quantity.value.trim()) {
                        showError('quantity', `Quantity is required for variant ${i + 1}`);
                    }

                    // Validate price values
                    if (regularPrice && salePrice) {
                        const regPrice = parseFloat(regularPrice.value);
                        const salesPrice = parseFloat(salePrice.value);
                        if (salesPrice >= regPrice) {
                            showError('salePrice', `Sale price must be less than regular price for variant ${i + 1}`);
                        }
                    }
                }
            }


            const input1 = document.getElementById('input1');
            if (!input1 || (!input1.files[0] && !document.getElementById('imgView1').src)) {
                showError('image', 'At least one product image is required');
            }

            return isValid;
        }


        function addVariant() {
            const variantContainer = document.getElementById('variant-container').getElementsByClassName('card-body')[0];
            const variants = variantContainer.getElementsByClassName('variant');
            const newIndex = variants.length;

            const newVariant = document.createElement('div');
            newVariant.className = 'variant mb-4';
            newVariant.innerHTML = `
                <label for="size" class="form-label">Size:</label>
                <input type="number" name="variants[${newIndex}][size]" class="form-control border" required>
                <div id="size-error" class="error-message"></div>

                <label for="regularPrice" class="form-label">Regular Price:</label>
                <input type="number" name="variants[${newIndex}][regularPrice]" class="form-control border" required>
                <div id="regularPrice-error" class="error-message"></div>

                <label for="salePrice" class="form-label">Sale Price:</label>
                <input type="number" name="variants[${newIndex}][salePrice]" class="form-control border" required>
                <div id="salePrice-error" class="error-message"></div>

                <label for="quantity" class="form-label">Quantity:</label>
                <input type="number" name="variants[${newIndex}][quantity]" class="form-control border" value="1" required>
                <div id="quantity-error" class="error-message"></div>

                
                <button type="button" class="btn btn-danger mt-2" onclick="removeVariant(this)">Remove Variant</button>
            `;

            variantContainer.appendChild(newVariant);
        }

        function removeVariant(button) {
            const variant = button.closest('.variant');
            if (variant.parentElement.getElementsByClassName('variant').length > 1) {
                variant.remove();
                // Reindex remaining variants
                const variants = variant.parentElement.getElementsByClassName('variant');
                Array.from(variants).forEach((v, index) => {
                    v.querySelectorAll('input, select').forEach(input => {
                        const name = input.getAttribute('name');
                        if (name) {
                            input.setAttribute('name', name.replace(/variants\[\d+\]/, `variants[${index}]`));
                        }
                    });
                });
            } else {
                alert('At least one variant is required');
            }
        }



    </script>


    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

    <%- include("../../views/partials/admin/footer") %>




