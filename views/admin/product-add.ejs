<%- include("../../views/partials/admin/header") %>

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    </head>
    <style>
        .error-message {
            color: red;
        }

        .thumbnails-container {
            display: flex;
            overflow-x: auto;
            gap: 10px;
        }

        .thumbnail {
            margin-right: 10px;
        }

        .form-label {
            font-weight: bold;
        }

        .card {
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        .content-main {
            padding: 20px;
        }

        .btn {
            margin-top: 15px;
            background-color: #088178;
        }

        .image-preview {
            max-width: 100%;
            max-height: 200px;
            object-fit: contain;
            border: 1px solid #ddd;
            padding: 5px;
            border-radius: 8px;
        }

        .image-upload-section {
            border: 1px solid #ccc;
            padding: 20px;
            border-radius: 10px;
            background-color: #f9f9f9;
        }

        .cropped-preview {
            max-width: 100%;
            max-height: 150px;
            border: 1px dashed #007bff;
            padding: 5px;
            border-radius: 8px;
        }
    </style>

    <section class="content-main">
        <div class="row">
            <div class="col-12">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <div class="col-lg-8 mx-auto">
                <div class="card mb-4">
                    <div class="card-body">

                        <form method="post" action="/admin/addProducts" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <% for(let i=0;i<brand.length;i++) { %>

                                        <option value="<%= brand[i].brandName %>">

                                            <%= brand[i].brandName %>

                                        </option>

                                        <% } %>

                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full Description</label>
                                <textarea placeholder="Type here" id="descriptionid" name="description"
                                    class="form-control border" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-md-4 mb-4">
                                    <label class="form-label">Regular Price</label>
                                    <input placeholder="Rs." name="regularPrice" type="text"
                                        class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                                <div class="col-md-4 mb-4">
                                    <label class="form-label">Sale Price</label>
                                    <input placeholder="Rs." name="salePrice" type="text" class="form-control border">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                                <div class="col-md-4 mb-4">
                                    <label class="form-label">Quantity</label>
                                    <input placeholder="" name="quantity" type="text" class="form-control border">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="row">
                                <!-- <div class="col-md-6 mb-4">
                                    <label class="form-label">Color</label>
                                    <input name="color" type="text" class="form-control border">
                                    <div id="color-error" class="error-message"></div>
                                </div> -->
                                <div class="col-md-6 mb-4">
                                    <label class="form-label">Size</label>
                                    <input name="size" type="text" class="form-control border">
                                    <div id="size-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Category</label>
                                <select class="form-select border" name="category">
                                    <% for(let i=0;i<category.length;i++) { %>

                                        <option value="<%= category[i].name %>">

                                            <%= category[i].name %>

                                        </option>

                                        <% } %>
                                </select>
                                <div id="category-error" class="error-message"></div>
                            </div>

                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Choose Images</h4>
                                </div>
                                <div class="card-body">
                                    <!-- Image 1 -->
                                    <div class="image-upload-section mb-4">
                                        <label for="input1" class="form-label">Upload Image 1:</label>
                                        <div class="d-flex flex-column align-items-center">
                                            <img src="" alt="Image Preview 1" id="imgView1" class="image-preview mb-3">
                                            <input class="form-control mb-2" type="file" name="images" id="input1"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="viewImage1(event), viewImage(event, 1)">
                                            <div class="image-cropper d-flex align-items-center" style="display:none;">
                                                <img src="" id="croppedImg1" alt="" class="cropped-preview">
                                                <button type="button" id="saveButton1"
                                                    class="btn btn-sm btn-primary mt-2">Save</button>
                                            </div>
                                            <div id="images-error" class="error-message"></div>
                                        </div>
                                    </div>

                                    <!-- Image 2 -->
                                    <div class="image-upload-section mb-4">
                                        <label for="input2" class="form-label">Upload Image 2:</label>
                                        <div class="d-flex flex-column align-items-center">
                                            <img src="" alt="Image Preview 2" id="imgView2" class="image-preview mb-3">
                                            <input class="form-control mb-2" type="file" name="images" id="input2"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="viewImage2(event), viewImage(event, 2)">
                                            <div class="image-cropper d-flex align-items-center" style="display:none;">
                                                <img src="" id="croppedImg2" alt="" class="cropped-preview">
                                                <button type="button" id="saveButton2"
                                                    class="btn btn-sm btn-primary mt-2">Save</button>
                                            </div>
                                            <div id="images-error" class="error-message"></div>
                                        </div>
                                    </div>

                                    <!-- Image 3 -->
                                    <div class="image-upload-section mb-4">
                                        <label for="input3" class="form-label">Upload Image 3:</label>
                                        <div class="d-flex flex-column align-items-center">
                                            <img src="" alt="Image Preview 3" id="imgView3" class="image-preview mb-3">
                                            <input class="form-control mb-2" type="file" name="images" id="input3"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="viewImage3(event), viewImage(event, 3)">
                                            <div class="image-cropper d-flex align-items-center" style="display:none;">
                                                <img src="" id="croppedImg3" alt="" class="cropped-preview">
                                                <button type="button" id="saveButton3"
                                                    class="btn btn-sm btn-primary mt-2">Save</button>
                                            </div>
                                            <div id="images-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>



                            <div class="text-center">
                                <button class="btn btn-primary btn-md rounded font-sm hover-up"
                                    style="background-color: rgb(0, 187, 0);" type="button"
                                    onclick="validateAndSubmit()">
                                    Publish
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>


    <script>


        function validateAndSubmit() {
            if (validateForm()) {
                // Show loading state
                Swal.fire({
                    title: 'Publishing...',
                    text: 'Please wait while we process your submission',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                // Submit the form
                document.querySelector('form').submit();
            }
        }



        function viewImage1(event) {
            document.getElementById("imgView1").src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage2(event) {
            document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage3(event) {
            document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0]);
        }



        //crop  
        async function viewImage(event, index) {
            const input = event.target;
            const reader = new FileReader();

            reader.onload = function () {
                const dataURL = reader.result;
                const image = document.getElementById("imgView" + index);
                image.src = dataURL;

                // Initialize Cropper
                const cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 1,
                    guides: true,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true,
                });

                const cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
                cropperContainer.style.display = "block";

                // Save Cropped Image
                const saveButton = document.querySelector("#saveButton" + index);
                saveButton.addEventListener("click", async function () {
                    const croppedCanvas = cropper.getCroppedCanvas();

                    if (croppedCanvas) {
                        const timestamp = new Date().getTime();
                        const fileName = `cropped-img-${timestamp}-${index}.jpeg`;

                        croppedCanvas.toBlob(
                            (blob) => {
                                const file = new File([blob], fileName, { type: "image/jpeg" });
                                const dataTransfer = new DataTransfer();
                                dataTransfer.items.add(file);

                                const inputField = document.getElementById("input" + index);
                                inputField.files = dataTransfer.files;

                                // Update cropped image display
                                const croppedImage = document.getElementById("croppedImg" + index);
                                croppedImage.src = URL.createObjectURL(file);

                                // Cleanup
                                cropper.destroy();
                                cropperContainer.style.display = "none";
                            },
                            "image/jpeg",
                            1.0   // Quality
                        );
                    }
                });
            };

            reader.readAsDataURL(input.files[0]);
        }




        //thumbnail
        const selectedImages = [];
        document.getElementById("input1").addEventListener("change", handleFileSelect);

        function handleFileSelect(event) {
            const addedImagesContainer = document.getElementById("addedImagesContainer");
            addedImagesContainer.innerHTML = "";
            const files = event.target.files;
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const thumbnail = document.createElement("div");
                thumbnail.classList.add("thumbnail");


                const img = document.createElement("img");
                img.src = URL.createObjectURL(file);
                img.alt = "thumbnail";
                img.style.width = "50px";
                img.style.height = "auto";
                const removeIcon = document.createElement("span");
                removeIcon.classList.add("remove-icon");
                removeIcon.innerHTML = "&times;";
                removeIcon.addEventListener("click", function () {
                    const index = selectedImages.indexOf(file);
                    if (index !== -1) {
                        selectedImages.splice(index, 1);
                    }
                    thumbnail.remove();
                });

                thumbnail.appendChild(img);
                thumbnail.appendChild(removeIcon);
                addedImagesContainer.appendChild(thumbnail);

            }
        }



        function validateForm() {
            clearErrorMessages();
            let isValid = true;

            // Get all form values
            const name = document.getElementsByName('productName')[0].value;
            const description = document.getElementById('descriptionid').value;
            const regularPrice = document.getElementsByName('regularPrice')[0].value;
            const salePrice = document.getElementsByName('salePrice')[0].value;
            const size = document.getElementsByName('size')[0].value;
            const quantity = document.getElementsByName('quantity')[0].value;
            const input1 = document.getElementById('input1');
            const input2 = document.getElementById('input2');
            const input3 = document.getElementById('input3');

            // Validate product name
            if (name.trim() === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            } else if (!/^[a-zA-Z0-9\s]+$/.test(name.trim())) {
                displayErrorMessage('productName-error', 'Product name should contain only alphanumeric characters.');
                isValid = false;
            }

            // Validate description
            if (description.trim() === "") {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            }

            // Validate prices
            if (!regularPrice || regularPrice.trim() === "") {
                displayErrorMessage('regularPrice-error', 'Please enter a regular price.');
                isValid = false;
            } else if (!/^\d+(\.\d{1,2})?$/.test(regularPrice) || parseFloat(regularPrice) <= 0) {
                displayErrorMessage('regularPrice-error', 'Please enter a valid positive price.');
                isValid = false;
            }

            if (!salePrice || salePrice.trim() === "") {
                displayErrorMessage('salePrice-error', 'Please enter a sale price.');
                isValid = false;
            } else if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) <= 0) {
                displayErrorMessage('salePrice-error', 'Please enter a valid positive price.');
                isValid = false;
            }

            if (parseFloat(regularPrice) <= parseFloat(salePrice)) {
                displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
                isValid = false;
            }

            // Validate quantity
            if (!quantity || quantity.trim() === "") {
                displayErrorMessage('quantity-error', 'Please enter quantity.');
                isValid = false;
            } else if (!/^\d+$/.test(quantity) || parseInt(quantity) <= 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid positive quantity.');
                isValid = false;
            }

            // Validate size
            if (size.trim() === "") {
                displayErrorMessage('size-error', 'Please enter a size.');
                isValid = false;
            }

            // Validate images
            if (!input1.files.length || !input2.files.length || !input3.files.length) {
                Swal.fire({
                    icon: 'error',
                    title: 'Image Required',
                    text: 'Please upload all 3 product images!'
                });
                isValid = false;
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            const errorElement = document.getElementById(elementId);
            if (errorElement) {
                errorElement.innerText = message;
                errorElement.style.display = "block";
            }
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
                element.style.display = 'none';
            });
        }



    </script>


    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <%- include("../../views/partials/admin/footer") %>