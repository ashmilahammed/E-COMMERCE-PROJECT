<%- include("../../views/partials/admin/header") %>


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>


    <style>

        /* styles for search and filter */
        .filter-container {
            /* background-color: rgba(8, 129, 120, 0.2); */
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }

        .return-request-badge {
            background-color: #f3e8ff;
            color: #9333ea;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8rem;
        }

        .status-badge {
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 0.875rem;
        }

        .status-delivered {
            background-color: #00c403;
            color: #ffffff;
            /* font-weight: bold; */
            border-radius: 2px;
        }

        .status-shipped {
            background-color: #04b695b1;
            color: #ffffff;
            /* font-weight: bold; */
            border-radius: 2px;
        }

        .status-pending {
            background-color: #ffa012;
            color: #ffffff;
            /* font-weight: bold; */
            border-radius: 2px;
        }

        .status-cancelled {
            background-color: #f13939;
            color: #ffffff;
            /* font-weight: bold; */
            border-radius: 2px;
        }
    </style>

    <style>
        /* Status Change Modal Dropdown Styles */
        .status-change-container {
            position: static;
        }

        .status-change-dropdown {
            position: fixed;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%) scale(0.95);
            min-width: 280px;
            background-color: #ffffff;
            border: 1px solid #e9ecef;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            z-index: 1060;
            /* Increased z-index */
            opacity: 0;
            visibility: hidden;
            transition: all 0.2s ease-in-out;
            pointer-events: none;
        }

        .status-change-dropdown.show {
            opacity: 1;
            visibility: visible;
            transform: translate(-50%, -50%) scale(1);
            pointer-events: auto;
        }

        .status-change-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1050;
            backdrop-filter: blur(2px);
        }

        .status-change-overlay.show {
            display: block;
        }

        .status-change-dropdown .dropdown-header {
            background-color: #f8f9fa;
            padding: 1rem 1.25rem;
            border-bottom: 1px solid #e9ecef;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-top-left-radius: 12px;
            border-top-right-radius: 12px;
        }

        .status-change-dropdown .dropdown-header h6 {
            margin: 0;
            font-size: 1rem;
            font-weight: 600;
            color: #1f2937;
        }

        .status-change-dropdown .status-option {
            display: flex;
            align-items: center;
            padding: 0.875rem 1.25rem;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .status-change-dropdown .status-option:last-child {
            border-bottom-left-radius: 12px;
            border-bottom-right-radius: 12px;
        }

        .status-change-dropdown .status-option:hover {
            background-color: #f3f4f6;
        }

        .status-change-dropdown .status-option-icon {
            width: 16px;
            height: 16px;
            border-radius: 50%;
            margin-right: 15px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        /* Status colors with improved visibility */
        .status-processing-submenu {
            background-color: #ff962e;
        }

        .status-shipped-submenu {
            background-color: #2563eb;
        }

        .status-delivered-submenu {
            background-color: #00e827;
        }

        .status-cancelled-submenu {
            background-color: #ff3333;
        }

        /* Added animation for better feedback */
        .status-option:active {
            transform: scale(0.98);
        }
    </style>


    <div class="main-content">

        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Order Management</h2>
            <a href="/admin/return-Requests">
                <button class="btn btn-primary">Return orders</button>
            </a>
        </div>
       

        <!-- Search and Filter Section -->
        <div class="filter-container">
            <div class="row g-3">
                <div class="col-md-3">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search Order ID, User Name">
                </div>
                <div class="col-md-3">
                    <select id="statusFilter" class="form-select">
                        <option value="">All Statuses</option>
                        <option value="Pending">Pending</option>
                        <option value="Shipped">Shipped</option>
                        <option value="Delivered">Delivered</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select id="sortOrder" class="form-select">
                        <option value="newest">Newest First</option>
                        <option value="oldest">Oldest First</option>
                        <option value="highAmount">Highest Amount</option>
                        <option value="lowAmount">Lowest Amount</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <button id="clearSearchBtn" class="btn" style="background-color: rgba(8, 129, 120, 0.2);">Clear
                        Search</button>
                </div>
            </div>
        </div>

        <!-- Order List -->
        <div class="table-responsive shadow-sm">
            <table class="table table-hover" id="orderTable">
                <thead>
                    <tr>
                        <th style="background-color:  rgba(8, 129, 120, 0.2);">Order ID</th>
                        <th style="background-color:  rgba(8, 129, 120, 0.2);">User Details</th>
                        <th style="background-color:  rgba(8, 129, 120, 0.2);">Date</th>
                        <th style="background-color:  rgba(8, 129, 120, 0.2);">Total Amount</th>
                        <th style="background-color:  rgba(8, 129, 120, 0.2);">Status</th>
                        <th style="background-color:  rgba(8, 129, 120, 0.2);">Return Request</th>
                        <th style="background-color:  rgba(8, 129, 120, 0.2);">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% orders.forEach(function(order) { %>
                        <tr>
                            <td>
                                <%= order.orderNumber %>
                            </td>
                            <td>
                                <%= order.shippingAddress.name %><br>
                                    <small class="text-muted">
                                        <%= order.shippingAddress.phone %>
                                    </small>
                            </td>
                            <td>
                                <%= order.createdAt.toLocaleDateString() %>
                            </td>
                            <td>â‚¹<%= order.pricing.finalAmount.toFixed(2) %>
                            </td>
                            <td>
                                <span class="status-badge status-<%= order.orderStatus.toLowerCase() %>">
                                    <%= order.orderStatus %>
                                </span>
                            </td>
                            <td>
                                <% if (order.returnRequest) { %>
                                    <span class="return-request-badge">
                                        Return Requested
                                    </span>
                                    <% } %>
                            </td>
                            <td>
                                <div class="dropdown">
                                    <a href="#" class="text-decoration-none text-dark" data-bs-toggle="dropdown">
                                        <i class="bi bi-three-dots-vertical"></i>
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li>
                                            <a class="dropdown-item" href="/admin/orderList-details/<%= order._id %>">
                                                <i class="bi bi-eye"></i> View Details
                                            </a>
                                        </li>
                                        <% if (order.returnRequest) { %>
                                            <li>
                                                <a class="dropdown-item verify-return" data-order-id="<%= order._id %>"
                                                    href="#">
                                                    <i class="bi bi-arrow-clockwise"></i> Verify Return
                                                </a>
                                            </li>
                                            <% } %>
                                                <li>
                                                    <hr class="dropdown-divider">
                                                </li>

                                                <% if (order.orderStatus !=='Cancelled' ) { %>
                                                    <li class="status-change-container">
                                                        <a class="dropdown-item change-status-trigger" href="#"
                                                            data-order-id="<%= order._id %>">
                                                            <i class="bi bi-arrow-repeat me-2"></i> Change Status
                                                        </a>
                                                        <div class="status-change-dropdown"
                                                            data-order-id="<%= order._id %>">
                                                            <div class="dropdown-header">
                                                                <h6>Change Order Status</h6>
                                                                <button type="button" class="btn-close"
                                                                    aria-label="Close"></button>
                                                            </div>
                                                            <div class="status-option status-update"
                                                                data-status="Pending">
                                                                <span
                                                                    class="status-option-icon status-processing-submenu"></span>
                                                                Pending
                                                            </div>
                                                            <div class="status-option status-update"
                                                                data-status="Shipped">
                                                                <span
                                                                    class="status-option-icon status-shipped-submenu"></span>
                                                                Shipped
                                                            </div>
                                                            <div class="status-option status-update"
                                                                data-status="Delivered">
                                                                <span
                                                                    class="status-option-icon status-delivered-submenu"></span>
                                                                Delivered
                                                            </div>
                                                            <div class="status-option status-update"
                                                                data-status="Cancelled">
                                                                <span
                                                                    class="status-option-icon status-cancelled-submenu"></span>
                                                                Cancelled
                                                            </div>
                                                        </div>
                                                    </li>

                                                    <% } else { %>
                                                        <li class="dropdown-item disabled">Status cannot be changed
                                                            (Cancelled)</li>
                                                        <% } %>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                        <% }); %>
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <nav class="mt-4">
            <ul class="pagination justify-content-center">
                <% if (currentPage> 1) { %>
                    <li class="page-item">
                        <a class="page-link" href="?page=<%= currentPage - 1 %>">
                            <i class="bi bi-chevron-left"></i>
                        </a>
                    </li>
                    <% } %>

                        <% for(let i=1; i <=totalPages; i++) { %>
                            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %>">
                                    <%= i %>
                                </a>
                            </li>
                            <% } %>

                                <% if (currentPage < totalPages) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage + 1 %>">
                                            <i class="bi bi-chevron-right"></i>
                                        </a>
                                    </li>
                                    <% } %>
            </ul>
        </nav>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('searchInput');
            const statusFilter = document.getElementById('statusFilter');
            const sortOrder = document.getElementById('sortOrder');
            const clearSearchBtn = document.getElementById('clearSearchBtn');
            const orderTable = document.getElementById('orderTable');

            // Search functionality
            function filterOrders() {
                const searchTerm = searchInput.value.toLowerCase();
                const statusTerm = statusFilter.value.toLowerCase();
                const rows = orderTable.querySelectorAll('tbody tr');

                rows.forEach(row => {
                    const orderId = row.querySelector('td:first-child').textContent.toLowerCase();
                    const userName = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                    const status = row.querySelector('.status-badge').textContent.toLowerCase();

                    const matchSearch = searchTerm === '' ||
                        orderId.includes(searchTerm) ||
                        userName.includes(searchTerm);

                    const matchStatus = statusTerm === '' || status.includes(statusTerm);

                    row.style.display = matchSearch && matchStatus ? '' : 'none';
                });
            }

            // Sorting functionality
            function sortOrdersBy(criteria) {
                const rows = Array.from(orderTable.querySelectorAll('tbody tr'));
                rows.sort((a, b) => {
                    const getAmount = (row) => parseFloat(row.querySelector('td:nth-child(4)').textContent.replace('â‚¹', ''));
                    const getDate = (row) => new Date(row.querySelector('td:nth-child(3)').textContent);

                    switch (criteria) {
                        case 'newest':
                            return getDate(b) - getDate(a);
                        case 'oldest':
                            return getDate(a) - getDate(b);
                        case 'highAmount':
                            return getAmount(b) - getAmount(a);
                        case 'lowAmount':
                            return getAmount(a) - getAmount(b);
                    }
                });

                const tbody = orderTable.querySelector('tbody');
                rows.forEach(row => tbody.appendChild(row));
            }

            // Event Listeners
            searchInput.addEventListener('input', filterOrders);
            statusFilter.addEventListener('change', filterOrders);
            sortOrder.addEventListener('change', () => sortOrdersBy(sortOrder.value));

            clearSearchBtn.addEventListener('click', () => {
                searchInput.value = '';
                statusFilter.value = '';
                sortOrder.value = 'newest';
                filterOrders();
            });



            // Return Request Verification
            document.querySelectorAll(".verify-return").forEach(link => {
                link.addEventListener('click', async (e) => {
                    e.preventDefault();
                    const orderId = e.target.dataset.orderId;

                    const result = await Swal.fire({
                        title: 'Verify Return Request',
                        text: 'Do you want to accept this return request?',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonText: 'Accept',
                        cancelButtonText: 'Reject'
                    });

                    if (result.isConfirmed) {
                        try {
                            const response = await fetch('/admin/verify-return', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    orderId,
                                    action: 'accept'
                                })
                            });

                            const data = await response.json();
                            if (data.success) {
                                Swal.fire({
                                    title: 'Return Accepted',
                                    text: 'Return request accepted. Refund processed to user wallet.',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then(() => window.location.reload());
                            } else {
                                Swal.fire({
                                    title: 'Return Verification Failed',
                                    text: data.message || 'Unable to process return',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        } catch (error) {
                            console.error("Return verification error:", error);
                            Swal.fire({
                                title: 'Error',
                                text: 'An unexpected error occurred',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        // Reject return request
                        try {
                            const response = await fetch('/admin/verify-return', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    orderId,
                                    action: 'reject'
                                })
                            });

                            const data = await response.json();
                            if (data.success) {
                                Swal.fire({
                                    title: 'Return Rejected',
                                    text: 'Return request has been rejected.',
                                    icon: 'info',
                                    confirmButtonText: 'OK'
                                }).then(() => window.location.reload());
                            }
                        } catch (error) {
                            console.error("Return rejection error:", error);
                        }
                    }
                });
            });
        });
    </script>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Status Change Dropdown Functionality
            const changeStatusTriggers = document.querySelectorAll('.change-status-trigger');
            const statusChangeDropdowns = document.querySelectorAll('.status-change-dropdown');

            // Close all dropdowns
            function closeAllStatusDropdowns() {
                statusChangeDropdowns.forEach(dropdown => {
                    dropdown.classList.remove('show');
                });
            }

            // Toggle dropdown
            changeStatusTriggers.forEach(trigger => {
                trigger.addEventListener('click', function (e) {
                    e.preventDefault();
                    e.stopPropagation();

                    closeAllStatusDropdowns();

                    // Find the corresponding dropdown
                    const orderId = this.getAttribute('data-order-id');
                    const dropdown = document.querySelector(`.status-change-dropdown[data-order-id="${orderId}"]`);

                    // Toggle current dropdown
                    dropdown.classList.toggle('show');
                });
            });

            // Close button functionality
            statusChangeDropdowns.forEach(dropdown => {
                const closeBtn = dropdown.querySelector('.btn-close');
                closeBtn.addEventListener('click', function () {
                    dropdown.classList.remove('show');
                });
            });

            // Close dropdowns when clicking outside
            document.addEventListener('click', function (e) {
                if (!e.target.closest('.status-change-container')) {
                    closeAllStatusDropdowns();
                }
            });

            // Status Update Handler
            const statusUpdateOptions = document.querySelectorAll('.status-update');
            statusUpdateOptions.forEach(option => {
                option.addEventListener('click', async function (e) {
                    const orderId = this.closest('.status-change-dropdown').getAttribute('data-order-id');
                    const status = this.getAttribute('data-status');

                    try {
                        const response = await fetch('/admin/update-order-status', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ orderId, status })
                        });

                        const result = await response.json();
                        if (result.success) {
                            Swal.fire({
                                title: 'Status Updated',
                                text: `Order status changed to ${status}`,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(() => window.location.reload());
                        } else {
                            Swal.fire({
                                title: 'Update Failed',
                                text: result.message || 'Failed to update order status',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    } catch (error) {
                        console.error("Error updating status:", error);
                        Swal.fire({
                            title: 'Error',
                            text: 'An unexpected error occurred',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            });
        });
    </script>



    <%- include("../../views/partials/admin/footer") %>