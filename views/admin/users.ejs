<%- include('../../views/partials/admin/header') %>


    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <style>
        /* Your existing styles */
        table {
            width: 100%;
            border-collapse: collapse;
        }

        th,
        td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #6d6d6d;
        }

        th {
            background-color: rgba(8, 129, 120, 0.2);
        }

        .action-btn {
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .block-btn {
            background-color: #f44336;
            color: white;
        }

        .unblock-btn {
            background-color: #4CAF50;
            color: white;
        }

        #title {
            text-align: center;
            margin-bottom: 30px;
            font-size: 2rem;
            font-weight: bold;
        }

        .search-section {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            justify-content: center;
            margin-bottom: 20px;
        }

        #searchInput {
            padding: 10px;
            font-size: 1rem;
            width: 300px;
            height: 40px;
            max-width: 100%;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        #searchBtn {
            padding: 1px 15px;
            height: 40px;
            font-size: 1rem;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        #searchBtn:hover {
            background-color: #0056b3;
        }

        .column-header {
            font-size: 14px;
            color: #3b3b3b;
        }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .pagination a {
            padding: 8px 12px;
            margin: 0 5px;
            text-decoration: none;
            border: 1px solid #ccc;
            border-radius: 4px;
            color: #ad5017;
        }

        .pagination a:hover {
            background-color: #daa675;
        }

        .pagination .active {
            background-color: #d08420;
            color: white;
            border-color: black;
        }
    </style>

    <div class="container">
        <h1 id="title">User Management</h1>

        <div class="search-section">
            <input type="text" id="searchInput" placeholder="Search users...">
            <button id="searchBtn">Search</button>
        </div>

        <table>
            <thead>
                <tr>
                    <th class="column-header">Username</th>
                    <th class="column-header">Email</th>
                    <th class="column-header">Mobile</th>
                    <th class="column-header">Joined on</th>
                    <th class="column-header">Action</th>
                </tr>
            </thead>
            <tbody id="userTableBody">
                <% users.forEach(user=> { %>
                    <tr>
                        <td>
                            <%= user.fullName %>
                        </td>
                        <td>
                            <%= user.email %>
                        </td>
                        <td>
                            <%= user.phone %>
                        </td>
                        <td>
                            <%= new Date(user.createdOn).toDateString() %>
                        </td>
                        <td>
                            <% if (user.isBlocked) { %>
                                <button class="action-btn unblock-btn" data-userid="<%= user._id %>"
                                    onclick="unblockCustomer('<%= user._id %>')">Unblock</button>
                                <% } else { %>
                                    <button class="action-btn block-btn" data-userid="<%= user._id %>"
                                        onclick="blockCustomer('<%= user._id %>')">Block</button>
                                    <% } %>

                        </td>
                    </tr>
                    <% }); %>
            </tbody>
        </table>

        <!-- Pagination -->
        <div class="pagination">
            <% if (currentPage> 1) { %>
                <a href="/admin/users?page=<%= currentPage - 1 %>">Previous</a>
                <% } %>

                    <% for (let i=1; i <=totalPages; i++) { %>
                        <a href="/admin/users?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>">
                            <%= i %>
                        </a>
                        <% } %>

                            <% if (currentPage < totalPages) { %>
                                <a href="/admin/users?page=<%= currentPage + 1 %>">Next</a>
                                <% } %>
        </div>

    </div>

    <script>
        
        async function blockCustomer(userId) {
            Swal.fire({
                title: "Are you sure?",
                text: "You are about to block this user!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, Block",
                cancelButtonText: "Cancel"
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        let response = await fetch('/admin/blockCustomer', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ userId })
                        });

                        let result = await response.json();
                        if (result.success) {
                            Toastify({
                                text: "User has been blocked!",
                                duration: 1500,
                                gravity: "top",
                                position: "right",
                                backgroundColor: "red",
                                close: true
                            }).showToast();

                            let button = document.querySelector(`button[data-userid="${userId}"]`);
                            if (button) {
                                button.textContent = "Unblock";
                                button.classList.remove("block-btn");
                                button.classList.add("unblock-btn");
                                button.setAttribute("onclick", `unblockCustomer('${userId}')`);
                            }
                        } else {
                            Toastify({
                                text: "Failed to block user.",
                                duration: 1500,
                                gravity: "top",
                                position: "right",
                                backgroundColor: "orange",
                                close: true
                            }).showToast();
                        }
                    } catch (error) {
                        console.error("Error:", error);
                        Toastify({
                            text: "Something went wrong!",
                            duration: 1500,
                            gravity: "top",
                            position: "right",
                            backgroundColor: "gray",
                            close: true
                        }).showToast();
                    }
                }
            });
        }



        async function unblockCustomer(userId) {
            Swal.fire({
                title: "Are you sure?",
                text: "You are about to unblock this user!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#28a745",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, Unblock",
                cancelButtonText: "Cancel"
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        let response = await fetch("/admin/unblockCustomer", {
                            method: "POST",
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ userId })
                        });

                        let result = await response.json();
                        if (result.success) {
                            Toastify({
                                text: "User has been unblocked!",
                                duration: 1500,
                                gravity: "top",
                                position: "right",
                                backgroundColor: "green",
                                close: true
                            }).showToast();

                            let button = document.querySelector(`button[data-userid="${userId}"]`);
                            if (button) {
                                button.textContent = "Block";
                                button.classList.remove("unblock-btn");
                                button.classList.add("block-btn");
                                button.setAttribute("onclick", `blockCustomer('${userId}')`);
                            }
                        } else {
                            Toastify({
                                text: "Failed to unblock user.",
                                duration: 1500,
                                gravity: "top",
                                position: "right",
                                backgroundColor: "orange",
                                close: true
                            }).showToast();
                        }
                    } catch (error) {
                        console.error("Error:", error);
                        Toastify({
                            text: "Something went wrong!",
                            duration: 3000,
                            gravity: "top",
                            position: "right",
                            backgroundColor: "gray",
                            close: true
                        }).showToast();
                    }
                }
            });
        }



        document.addEventListener('DOMContentLoaded', () => {
            const searchInput = document.getElementById('searchInput');
            const searchBtn = document.getElementById('searchBtn');
            const userTableBody = document.getElementById('userTableBody');

            searchBtn.addEventListener('click', performSearch);
            searchInput.addEventListener('keyup', (e) => {
                if (e.key === 'Enter') performSearch();
            });

            function performSearch() {
                const searchTerm = searchInput.value.toLowerCase();
                const rows = userTableBody.querySelectorAll('tr');

                rows.forEach(row => {
                    const username = row.cells[0].textContent.toLowerCase();
                    const email = row.cells[1].textContent.toLowerCase();
                    const mobile = row.cells[2].textContent.toLowerCase();

                    if (username.includes(searchTerm) || email.includes(searchTerm) || mobile.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            }
        });


    </script>

    <%- include('../../views/partials/admin/footer') %>