<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sign Up Page</title>

  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

    :root {
      --primary: #1d1d1d;
      --primary-dark: #4338ca;
      --secondary: #f43f5e;
      --secondary-dark: #e11d48;
      --background: #f8fafc;
      --card: #ffffff;
      --text: #1e293b;
      --text-light: #64748b;
      --border: #e2e8f0;
      --error: #ef4444;
      --success: #10b981;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      font-family: 'Poppins', sans-serif;
    }

    html,
    body {
      height: 100%;
      max-height: 100%;
      overflow: hidden;
    }

    body {
      background-color: var(--background);
      background-image:
        radial-gradient(at 0% 0%, rgba(79, 70, 229, 0.1) 0px, transparent 50%),
        radial-gradient(at 100% 100%, rgba(244, 63, 94, 0.1) 0px, transparent 50%);
      background-attachment: fixed;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 12px;
      color: var(--text);
    }

    .container {
      width: 100%;
      max-width: 900px;
      max-height: 98vh;
      background-color: var(--card);
      border-radius: 12px;
      display: flex;
      box-shadow: 0 10px 15px -5px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
      position: relative;
      overflow: hidden;
    }

    .container::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: linear-gradient(to right, var(--primary), var(--secondary));
    }

    .image-section {
      flex: 5;
      position: relative;
      background-color: var(--primary);
      display: none;
    }

    @media (min-width: 768px) {
      .image-section {
        display: block;
      }
    }

    .image-content {
      position: absolute;
      inset: 0;
      background: url('/images/nike\ white.webp') no-repeat center center / cover;
      opacity: 0.9;
      border-radius: 12px 0 0 12px;
    }

    .image-overlay {
      position: absolute;
      inset: 0;
      /* background: linear-gradient(135deg, rgba(79, 70, 229, 0.6), rgba(244, 63, 94, 0.4)); */
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding: 20px;
      color: white;
      text-align: center;
      border-radius: 12px 0 0 12px;
    }

    .brand-title {
      font-size: 22px;
      font-weight: 700;
      margin-bottom: 8px;
      letter-spacing: -0.5px;
    }

    .brand-slogan {
      font-size: 13px;
      font-weight: 300;
      max-width: 250px;
      line-height: 1.4;
    }

    .form-section {
      flex: 7;
      padding: 14px;
      background-color: var(--card);
      overflow: hidden;
    }

    .form-header {
      margin-bottom: 10px;
      text-align: center;
    }

    .form-title {
      font-size: 30px;
      font-weight: 600;
      color: var(--text);
      margin-bottom: 4px;
    }

    .form-subtitle {
      font-size: 12px;
      color: var(--text-light);
    }

    .form-group {
      margin-bottom: 8px;
      position: relative;
    }

    .form-group label {
      display: block;
      margin-bottom: 2px;
      font-size: 13px;
      font-weight: 500;
      color: var(--text);
    }

    .form-group input {
      width: 100%;
      padding: 6px 10px;
      font-size: 12px;
      border: 1px solid var(--border);
      border-radius: 6px;
      background-color: var(--background);
      color: var(--text);
      transition: all 0.2s ease;
      height: 32px;
    }

    .form-group input::placeholder {
      color: var(--text-light);
      opacity: 0.6;
    }

    .form-group input:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.12);
    }

    .error-message {
      margin-top: 2px;
      font-size: 10px;
      color: var(--error);
      display: none;
      height: 13px;
    }

    .password-container {
      position: relative;
    }

    .toggle-password {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      color: var(--text-light);
      opacity: 0.6;
      transition: all 0.2s ease;
      font-size: 14px;
    }

    .toggle-password:hover {
      opacity: 1;
    }

    .btn-primary,
    .btn-secondary {
      width: 100%;
      padding: 8px;
      border: none;
      border-radius: 6px;
      font-size: 13px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 6px;
      position: relative;
      overflow: hidden;
      height: 36px;
    }

    .btn-primary {
      background-color: var(--primary);
      color: white;
    }

    .btn-primary:hover {
      background-color: var(--primary-dark);
    }

    .btn-secondary {
      background-color: white;
      color: var(--text);
      border: 1px solid var(--border);
      margin-top: 6px;
    }

    .btn-secondary:hover {
      background-color: #c0c0c0;
    }

    .divider {
      display: flex;
      align-items: center;
      text-align: center;
      margin: 8px 0;
      color: var(--text-light);
      font-size: 12px;
    }

    .divider::before,
    .divider::after {
      content: '';
      flex: 1;
      border-bottom: 1px solid var(--border);
    }

    .divider::before {
      margin-right: 10px;
    }

    .divider::after {
      margin-left: 10px;
    }

    .login-link {
      text-align: center;
      margin-top: 8px;
      font-size: 12px;
      color: var(--text-light);
    }

    .login-link a {
      color: var(--primary);
      text-decoration: none;
      font-weight: 500;
      transition: all 0.2s ease;
    }

    .login-link a:hover {
      color: var(--primary-dark);
      text-decoration: underline;
    }

    .error-shake {
      animation: shake 0.5s cubic-bezier(.36, .07, .19, .97) both;
    }

    @keyframes shake {

      10%,
      90% {
        transform: translate3d(-1px, 0, 0);
      }

      20%,
      80% {
        transform: translate3d(2px, 0, 0);
      }

      30%,
      50%,
      70% {
        transform: translate3d(-2px, 0, 0);
      }

      40%,
      60% {
        transform: translate3d(2px, 0, 0);
      }
    }

    .message {
      padding: 6px 10px;
      border-radius: 6px;
      margin-bottom: 8px;
      font-size: 12px;
      background-color: rgba(239, 68, 68, 0.1);
      color: var(--error);
      display: flex;
      align-items: center;
      gap: 6px;
    }

    @media (max-width: 767px) {
      .form-section {
        padding: 10px;
      }

      .container {
        max-height: 98vh;
      }
    }
  </style>
</head>

<body>
  <div class="container">
    <!-- Image Section -->
    <div class="image-section">
      <div class="image-content"></div>
      <div class="image-overlay">
        <h1 class="brand-title">Join Our Community</h1>
        <p class="brand-slogan">Create an account and start your journey with us today.</p>
      </div>
    </div>

    <!-- Form Section -->
    <div class="form-section">
      <div class="form-header">
        <h2 class="form-title">Create Account</h2>
        <p class="form-subtitle">Fill in your details to get started</p>
      </div>

      <% if (typeof message !=='undefined' ) { %>
        <div class="message">
          <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none"
            stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="12" y1="8" x2="12" y2="12"></line>
            <line x1="12" y1="16" x2="12.01" y2="16"></line>
          </svg>
          <%= message %>
        </div>
        <% } %>

          <form id="signForm" method="post" action="/signup">
            <!-- Full Name -->
            <div class="form-group">
              <label for="fullName">Full Name</label>
              <input type="text" id="fullName" name="fullName" placeholder="Enter your full name">
              <div id="errorName" class="error-message"></div>
            </div>

            <!-- Email -->
            <div class="form-group">
              <label for="email">Email Address</label>
              <input type="email" id="email" name="email" placeholder="Enter your email">
              <div id="errorEmail" class="error-message"></div>
            </div>

            <!-- Phone Number -->
            <div class="form-group">
              <label for="phone">Phone Number</label>
              <input type="tel" id="phone" name="phone" placeholder="Enter your phone number">
              <div id="errorPhone" class="error-message"></div>
            </div>

            <!-- Password -->
            <div class="form-group">
              <label for="password">Password</label>
              <div class="password-container">
                <input type="password" id="password" name="password" placeholder="Create a strong password">
                <span class="toggle-password" onclick="togglePassword('password')">üëÅÔ∏è</span>
              </div>
              <div id="errorPassword" class="error-message"></div>
            </div>

            <!-- Confirm Password -->
            <div class="form-group">
              <label for="confirm-password">Confirm Password</label>
              <div class="password-container">
                <input type="password" id="confirm-password" name="confirm-password"
                  placeholder="Confirm your password">
                <span class="toggle-password" onclick="togglePassword('confirm-password')">üëÅÔ∏è</span>
              </div>
              <div id="errorConfirmPassword" class="error-message"></div>
            </div>

            <!-- Sign Up Button -->
            <button type="submit" class="btn-primary">
              <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none"
                stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"></path>
                <polyline points="10 17 15 12 10 7"></polyline>
                <line x1="15" y1="12" x2="3" y2="12"></line>
              </svg>
              Create Account
            </button>

            <div class="divider">or</div>

            <!-- Sign Up with Google -->
            <button type="button" class="btn-secondary" onclick="redirectToGoogle()">
              <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none">
                <path
                  d="M21.8055 10.0415H21V10H12V14H17.6515C16.827 16.3285 14.6115 18 12 18C8.6865 18 6 15.3135 6 12C6 8.6865 8.6865 6 12 6C13.5295 6 14.921 6.577 15.9805 7.5195L18.809 4.691C17.023 3.0265 14.634 2 12 2C6.4775 2 2 6.4775 2 12C2 17.5225 6.4775 22 12 22C17.5225 22 22 17.5225 22 12C22 11.3295 21.931 10.675 21.8055 10.0415Z"
                  fill="#FFC107" />
                <path
                  d="M3.15295 7.3455L6.43845 9.755C7.32745 7.554 9.48045 6 12 6C13.5295 6 14.921 6.577 15.9805 7.5195L18.809 4.691C17.023 3.0265 14.634 2 12 2C8.15895 2 4.82795 4.1685 3.15295 7.3455Z"
                  fill="#FF3D00" />
                <path
                  d="M12 22C14.583 22 16.93 21.0115 18.7045 19.404L15.6095 16.785C14.5718 17.5742 13.3037 18.001 12 18C9.399 18 7.19049 16.3415 6.35995 14.027L3.09894 16.5395C4.75294 19.778 8.11394 22 12 22Z"
                  fill="#4CAF50" />
                <path
                  d="M21.8055 10.0415H21V10H12V14H17.6515C17.2571 15.1082 16.5467 16.0766 15.608 16.7855L15.6095 16.784L18.7045 19.4035C18.4855 19.6025 22 17 22 12C22 11.3295 21.931 10.675 21.8055 10.0415Z"
                  fill="#4F46E5" />
              </svg>
              Sign up with Google
            </button>

            <!-- Login Link -->
            <div class="login-link">
              Already have an account? <a href="/login">Log in</a>
            </div>
          </form>
    </div>
  </div>




  <script>
    function redirectToGoogle() {
      window.location.href = '/auth/google';
    }

    const nameid = document.getElementById("fullName");
    const emailid = document.getElementById("email");
    const phoneid = document.getElementById("phone");
    const passwordid = document.getElementById("password");
    const Cpasswordid = document.getElementById("confirm-password");

    const errorName = document.getElementById("errorName");
    const errorEmail = document.getElementById("errorEmail");
    const errorPhone = document.getElementById("errorPhone");
    const errorPassword = document.getElementById("errorPassword");
    const errorConfirmPassword = document.getElementById("errorConfirmPassword");

    const signForm = document.getElementById("signForm");

    function showError(element, message) {
      element.style.display = "block";
      element.innerHTML = message;
      // element.classList.add("error-shake");
      setTimeout(() => {
        element.classList.remove("error-shake");
      }, 500);
    }

    function hideError(element) {
      element.style.display = "none";
      element.innerHTML = "";
    }

    function nameValidateChecking() {
      const nameValue = nameid.value;
      const namePattern = /^[A-Za-z\s]+$/;

      if (nameValue.trim() === "") {
        showError(errorName, "Please enter a valid name.");
      } else if (!namePattern.test(nameValue)) {
        showError(errorName, "Name can only contain alphabets and spaces.");
      } else {
        hideError(errorName);
      }
    }

    function emailValidateChecking() {
      const emailValue = emailid.value;
      const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;

      if (!emailPattern.test(emailValue)) {
        showError(errorEmail, "Invalid email format.");
      } else {
        hideError(errorEmail);
      }
    }

    // function phoneValidateChecking() {
    //   const phoneValue = phoneid.value;

    //   if (phoneValue.trim() === "") {
    //     showError(errorPhone, "Enter a valid phone number");
    //   } else if (phoneValue.length !== 10) {
    //     showError(errorPhone, "Phone number must be 10 digits.");
    //   } else {
    //     hideError(errorPhone);
    //   }
    // }
    function phoneValidateChecking() {
      const phoneValue = phoneid.value;
      const phonePattern = /^[0-9]{10}$/;

      if (!phonePattern.test(phoneValue)) {
        showError(errorPhone, "Phone number must contain exactly 10 digits.");
      } else {
        hideError(errorPhone);
      }
    }


    function passwordValidateChecking() {
      const passwordValue = passwordid.value;
      const CpasswordValue = Cpasswordid.value;
      const alpha = /[a-zA-Z]/;
      const digit = /\d/;

      if (passwordValue.length < 8) {
        showError(errorPassword, "Should contain at least 8 characters");
      } else if (!alpha.test(passwordValue) || !digit.test(passwordValue)) {
        showError(errorPassword, "Password must contain alphabets and numbers.");
      } else {
        hideError(errorPassword);
      }

      if (passwordValue !== CpasswordValue) {
        showError(errorConfirmPassword, "Passwords do not match.");
      } else {
        hideError(errorConfirmPassword);
      }
    }

    document.addEventListener("DOMContentLoaded", function () {
      // Add input event listeners for real-time validation
      nameid.addEventListener("input", nameValidateChecking);
      emailid.addEventListener("input", emailValidateChecking);
      phoneid.addEventListener("input", phoneValidateChecking);
      passwordid.addEventListener("input", passwordValidateChecking);
      Cpasswordid.addEventListener("input", passwordValidateChecking);

      signForm.addEventListener("submit", function (e) {
        nameValidateChecking();
        emailValidateChecking();
        phoneValidateChecking();
        passwordValidateChecking();

        if (
          !nameid ||
          !emailid ||
          !phoneid ||
          !passwordid ||
          !Cpasswordid ||
          !errorName ||
          !errorEmail ||
          !errorPhone ||
          !errorPassword ||
          !errorConfirmPassword ||
          !signForm
        ) {
          console.error("One or more elements not found");
        }

        if (
          errorName.innerHTML ||
          errorEmail.innerHTML ||
          errorPhone.innerHTML ||
          errorPassword.innerHTML ||
          errorConfirmPassword.innerHTML
        ) {
          e.preventDefault();
        }
      });
    });

    function togglePassword(fieldId) {
      const field = document.getElementById(fieldId);
      field.type = field.type === "password" ? "text" : "password";
    }
  </script>
</body>

</html>