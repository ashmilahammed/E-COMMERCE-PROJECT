<%- include("../../views/partials/user/header") %>


    <style>
        .form-control {
            width: 100% !important;
            height: 38px;
            padding: 6px 12px;
            font-size: 16px;
            line-height: 1.5;
            border-radius: 4px;
            border: 1px solid #ced4da;
        }

        select.form-control {
            -webkit-appearance: menulist;
            -moz-appearance: menulist;
            appearance: menulist;
            padding-right: 30px;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-group label {
            margin-bottom: 0.25rem;
            font-size: 16px;
        }

        .row.mb-50 {
            margin-bottom: 1rem !important;
        }
    </style>



    <div class="container mt-4">
        <h3 class="mt-3" style="color: #046963; margin-bottom:70px">Create New Address</h3>

        <form id="addressForm" method="POST" action="/addAddress" class="border-0 p-3">
            <div class="row mb-50">
                <div class="form-group col-md-4">
                    <label for="addressType">Address Type:</label>
                    <!-- <input type="text" class="form-control border-3" id="addressType" name="addressType"> -->
                    <select class="form-control border-3" id="addressType" name="addressType">
                        <option value="HOME">Home</option>
                        <option value="WORK">Work</option>
                        <option value="OTHER">Other</option>
                    </select>


                </div>
                <div class="form-group col-md-4">
                    <label for="name">Name:</label>
                    <input type="text" class="form-control border-3" id="name" name="name">
                </div>
                <div class="form-group col-md-4">
                    <label for="city">City:</label>
                    <input type="text" class="form-control border-3" id="city" name="city">
                </div>
            </div>
            <div class="row mb-3">
                <div class="form-group col-md-4">
                    <label for="landMark">Landmark:</label>
                    <input type="text" class="form-control border-3" id="landMark" name="landMark">
                </div>
                <div class="form-group col-md-4">
                    <label for="state">State:</label>
                    <input type="text" class="form-control border-3" id="state" name="state">
                </div>
                <div class="form-group col-md-4">
                    <label for="pincode">Pincode:</label>
                    <input type="number" class="form-control border-3" id="pincode" name="pincode">
                </div>
            </div>
            <div class="row mb-3">
                <div class="form-group col-md-4">
                    <label for="phone">Phone:</label>
                    <input type="number" class="form-control border-3" id="phone" name="phone">
                </div>
                <div class="form-group col-md-4">
                    <label for="altPhone">Alternate Phone:</label>
                    <input type="number" class="form-control border-3" id="altPhone" name="altPhone">
                </div>
            </div>
            <button type="submit" id="submitButton" class="btn btn-primary">Submit</button>
           
            <a href="/userProfile"> <button type="button" class="btn btn-secondary">Cancel</button></a>

        </form>
    </div>
    <br><br><br>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <script>
        document.getElementById('addressForm').addEventListener('submit', function (event) {
            if (!validateForm()) {
                event.preventDefault();
            }
        });



        function validateForm() {
            let isValid = true;
            let errorMessages = [];

            const requiredFields = ["addressType", "name", "city", "landMark", "state", "pincode", "phone", "altPhone"];

            requiredFields.forEach(function (field) {
                const input = document.getElementById(field);
                const inputValue = input.value.trim();
                const errorElement = document.getElementById(field + '-error');

                if (inputValue === "") {
                    if (!errorElement) {
                        const errorDiv = document.createElement('div');
                        errorDiv.className = "text-danger";
                        errorDiv.textContent = "This field is required.";
                        errorDiv.id = field + '-error';
                        input.parentNode.appendChild(errorDiv);
                    }
                    errorMessages.push(`${field.replace(/([A-Z])/g, ' $1')} is required.`);
                    isValid = false;
                } else {
                    if (errorElement) {
                        errorElement.remove();
                    }
                }
            });


            const name = document.getElementById('name').value.trim();
            const city = document.getElementById('city').value.trim();
            const landMark = document.getElementById('landMark').value.trim();
            const state = document.getElementById('state').value.trim();
            const pincode = document.getElementById('pincode').value.trim();
            const phone = document.getElementById('phone').value.trim();
            const altPhone = document.getElementById('altPhone').value.trim();

            const namePattern = /^[A-Za-z\s]+$/;
            const pincodePattern = /^\d{6}$/;
            const phonePattern = /^\d{10}$/;

            if (!namePattern.test(name)) errorMessages.push("Name should contain alphabets only.");
            if (!namePattern.test(city)) errorMessages.push("City should contain alphabets only.");
            if (!namePattern.test(landMark)) errorMessages.push("Landmark should contain alphabets only.");
            if (!namePattern.test(state)) errorMessages.push("State should contain alphabets only.");

            if (!pincodePattern.test(pincode)) errorMessages.push("Pincode should be a 6-digit number.");

            if (!phonePattern.test(phone)) errorMessages.push("Phone number should be exactly 10 digits.");
            if (!phonePattern.test(altPhone)) errorMessages.push("Alternate phone number should be exactly 10 digits.");

            if (phone === altPhone) errorMessages.push("Phone number and alternate phone number should be different.");



            if (errorMessages.length > 0) {
                let messageToShow;

                if (errorMessages.length === 1) {
                    messageToShow = errorMessages[0];
                } else if (errorMessages.length <= 5) {
                    messageToShow = "<ul style='text-align: left;'>" + errorMessages.map(msg => `<li>${msg}</li>`).join('') + "</ul>";
                } else {
                    messageToShow = "Please fill all fields correctly.";
                }

                Swal.fire({
                    title: 'Validation Error',
                    html: messageToShow,
                    icon: 'error'
                });

                isValid = false;
            }

            return isValid;
        }

    </script>



    <%- include("../../views/partials/user/footer") %>